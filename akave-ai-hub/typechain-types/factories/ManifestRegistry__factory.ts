/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ManifestRegistry,
  ManifestRegistryInterface,
} from "../ManifestRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "manifestId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ManifestRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrarAddress",
        type: "address",
      },
    ],
    name: "addRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "manifestId",
        type: "string",
      },
    ],
    name: "getManifestHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRegistrar",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "manifestId",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "registerManifest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrarAddress",
        type: "address",
      },
    ],
    name: "removeRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "manifestId",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "verifyManifest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b0319163390811782556000908152600260205260409020805460ff191690911790556105408061004d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063af92a6931161005b578063af92a693146100f6578063ba904eed1461010b578063bb250c011461011e578063d5db72eb1461013157600080fd5b80633a35d96b146100825780638da5cb5b146100a8578063a341878f146100d3575b600080fd5b61009561009036600461043c565b610154565b6040519081526020015b60405180910390f35b6001546100bb906001600160a01b031681565b6040516001600160a01b03909116815260200161009f565b6100e66100e136600461047e565b61017e565b604051901515815260200161009f565b6101096101043660046104ca565b6101ac565b005b6101096101193660046104ca565b610229565b61010961012c36600461047e565b61029e565b6100e661013f3660046104ca565b60026020526000908152604090205460ff1681565b60008083836040516101679291906104fa565b908152602001604051809103902054905092915050565b600081600085856040516101939291906104fa565b9081526020016040518091039020541490509392505050565b6001546001600160a01b031633146102055760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6001546001600160a01b0316331461027d5760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b60448201526064016101fc565b6001600160a01b03166000908152600260205260409020805460ff19169055565b3360009081526002602052604090205460ff1661030b5760405162461bcd60e51b815260206004820152602560248201527f43616c6c6572206973206e6f7420616e20617574686f72697a6564207265676960448201526439ba3930b960d91b60648201526084016101fc565b6000838360405161031d9291906104fa565b908152604051908190036020019020541561037a5760405162461bcd60e51b815260206004820152601b60248201527f4d616e696665737420616c72656164792072656769737465726564000000000060448201526064016101fc565b806000848460405161038d9291906104fa565b9081526040519081900360200181209190915533906103af90859085906104fa565b60408051918290038220848352426020840152917f24364eba102fcd9ad0f9a87894d392f081fb0690516e526f62d6cd95cc07bf17910160405180910390a3505050565b60008083601f84011261040557600080fd5b50813567ffffffffffffffff81111561041d57600080fd5b60208301915083602082850101111561043557600080fd5b9250929050565b6000806020838503121561044f57600080fd5b823567ffffffffffffffff81111561046657600080fd5b610472858286016103f3565b90969095509350505050565b60008060006040848603121561049357600080fd5b833567ffffffffffffffff8111156104aa57600080fd5b6104b6868287016103f3565b909790965060209590950135949350505050565b6000602082840312156104dc57600080fd5b81356001600160a01b03811681146104f357600080fd5b9392505050565b818382376000910190815291905056fea264697066735822122056cc8755373b1d5d7bd368c813b2991f6fd21b49bae6f0f3fc04519e70d62e1764736f6c63430008140033";

type ManifestRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManifestRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ManifestRegistry__factory extends ContractFactory {
  constructor(...args: ManifestRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ManifestRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ManifestRegistry__factory {
    return super.connect(runner) as ManifestRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManifestRegistryInterface {
    return new Interface(_abi) as ManifestRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ManifestRegistry {
    return new Contract(address, _abi, runner) as unknown as ManifestRegistry;
  }
}
